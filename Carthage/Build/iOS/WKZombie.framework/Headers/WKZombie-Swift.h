// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

/**
  A HTML Parser Element class, which wraps the functionality of the TFHppleElement class.
*/
SWIFT_CLASS("_TtC8WKZombie17HTMLParserElement")
@interface HTMLParserElement : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable XPathQuery;
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nullable innerContent;
@property (nonatomic, readonly, copy) NSString * _Nullable text;
@property (nonatomic, readonly, copy) NSString * _Nullable content;
@property (nonatomic, readonly, copy) NSString * _Nullable tagName;
- (NSString * _Nullable)objectForKey:(NSString * _Nonnull)key;
- (BOOL)hasChildren;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/**
  The HTMLElement class is a base class, which can represent every element
  in the DOM, e.g. <img>, <a>, <form> etc.
*/
SWIFT_CLASS("_TtC8WKZombie11HTMLElement")
@interface HTMLElement : HTMLParserElement
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
@end


/**
  Base class for redirectable HTML elements (e.g. HTMLLink, HTMLButton).
*/
SWIFT_CLASS("_TtC8WKZombie16HTMLRedirectable")
@interface HTMLRedirectable : HTMLElement
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
@end


/**
  HTML Button class, which represents the <button> element in the DOM.
*/
SWIFT_CLASS("_TtC8WKZombie10HTMLButton")
@interface HTMLButton : HTMLRedirectable
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
@end



/**
  HTML Form class, which represents the <form> element in the DOM.
*/
SWIFT_CLASS("_TtC8WKZombie8HTMLForm")
@interface HTMLForm : HTMLElement
/**
  All inputs fields (keys and values) of this form.
*/
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull inputElements;
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
/**
  Returns the value for the name attribute.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable name;
/**
  Returns the value for the id attribute.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable id;
/**
  Returns the value for the action attribute.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable action;
- (NSString * _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key;
@end


/**
  HTML iframe Class, which represents the <iframe> element in the DOM.
*/
SWIFT_CLASS("_TtC8WKZombie9HTMLFrame")
@interface HTMLFrame : HTMLRedirectable
/**
  Returns the value of the src attribute of the iframe.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable source;
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
@end


/**
  HTML Image class, which represents the <img> element in the DOM.
*/
SWIFT_CLASS("_TtC8WKZombie9HTMLImage")
@interface HTMLImage : HTMLElement
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
/**
  Returns the value of the src attribute of the image.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable source;
@property (nonatomic, readonly, copy) NSURL * _Nullable fetchURL;
@end


/**
  HTML Link class, which represents the <a> element in the DOM.
*/
SWIFT_CLASS("_TtC8WKZombie8HTMLLink")
@interface HTMLLink : HTMLRedirectable
/**
  Returns the value of the href attribute of the link.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable href;
/**
  Returns the link text.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable linkText;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@property (nonatomic, readonly, copy) NSURL * _Nullable fetchURL;
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
@end


/**
  Base class for the HTMLParser and JSONParser.
*/
SWIFT_CLASS("_TtC8WKZombie6Parser")
@interface Parser : NSObject
/**
  The URL of the page.
*/
@property (nonatomic, readonly, copy) NSURL * _Nullable url;
/**
  Returns a (HTML or JSON) parser instance for the specified data.
  \param data The encoded data.

  \param url The URL of the page.


  returns:
  A HTML or JSON page.
*/
- (nonnull instancetype)initWithData:(NSData * _Nonnull)data url:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/**
  A HTML Parser class, which wraps the functionality of the TFHpple class.
*/
SWIFT_CLASS("_TtC8WKZombie10HTMLParser")
@interface HTMLParser : Parser
- (nonnull instancetype)initWithData:(NSData * _Nonnull)data url:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
- (NSArray * _Nullable)searchWithXPathQuery:(NSString * _Nonnull)xPathOrCSS;
@property (nonatomic, readonly, copy) NSData * _Nullable data;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/**
  HTMLPage class, which represents the DOM of a HTML page.
*/
SWIFT_CLASS("_TtC8WKZombie8HTMLPage")
@interface HTMLPage : HTMLParser
- (nonnull instancetype)initWithData:(NSData * _Nonnull)data url:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end




@class HTMLTableRow;

/**
  HTML Table class, which represents the <table> element in the DOM.
*/
SWIFT_CLASS("_TtC8WKZombie9HTMLTable")
@interface HTMLTable : HTMLElement
/**
  Returns all row elements within this table
*/
@property (nonatomic, readonly, copy) NSArray<HTMLTableRow *> * _Nullable rows;
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
@end


/**
  HTML Table Column class, which represents the <td> element in the DOM.
*/
SWIFT_CLASS("_TtC8WKZombie15HTMLTableColumn")
@interface HTMLTableColumn : HTMLElement
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
@end


/**
  HTML Table Row Class, which represents the <tr> element in the DOM.
*/
SWIFT_CLASS("_TtC8WKZombie12HTMLTableRow")
@interface HTMLTableRow : HTMLElement
/**
  Returns all columns within this row.
*/
@property (nonatomic, readonly, copy) NSArray<HTMLTableColumn *> * _Nullable columns;
- (nullable instancetype)initWithElement:(id _Nonnull)element XPathQuery:(NSString * _Nullable)XPathQuery OBJC_DESIGNATED_INITIALIZER;
@end


/**
  A JSON Parser class, which represents a JSON document.
*/
SWIFT_CLASS("_TtC8WKZombie10JSONParser")
@interface JSONParser : Parser
- (nonnull instancetype)initWithData:(NSData * _Nonnull)data url:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
- (id _Nullable)content;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/**
  JSONPage class, which represents the entire JSON document.
*/
SWIFT_CLASS("_TtC8WKZombie8JSONPage")
@interface JSONPage : JSONParser
- (nonnull instancetype)initWithData:(NSData * _Nonnull)data url:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end



/**
  WKZombie Console Logger
*/
SWIFT_CLASS("_TtC8WKZombie6Logger")
@interface Logger : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enabled;)
+ (BOOL)enabled;
+ (void)setEnabled:(BOOL)value;
+ (void)log:(NSString * _Nonnull)message lineBreak:(BOOL)lineBreak;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface UIImage (SWIFT_EXTENSION(WKZombie))
@end

@class WKProcessPool;

SWIFT_CLASS("_TtC8WKZombie8WKZombie")
@interface WKZombie : NSObject
/**
  A shared instance of \code
  Manager
  \endcode, used by top-level WKZombie methods,
  and suitable for multiple web sessions.
*/
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) WKZombie * _Nonnull sharedInstance;)
+ (WKZombie * _Nonnull)sharedInstance;
/**
  Returns the name of this WKZombie session.
*/
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name;
/**
  If false, the loading progress will finish once the ‘raw’ HTML data
  has been transmitted. Media content such as videos or images won’t
  be loaded.
*/
@property (nonatomic) BOOL loadMediaContent;
/**
  The custom user agent string or nil if no custom user agent string has been set.
*/
@property (nonatomic, copy) NSString * _Nullable userAgent;
/**
  An operation is cancelled if the time it needs to complete exceeds the time
  specified by this property. Default is 30 seconds.
*/
@property (nonatomic) NSTimeInterval timeoutInSeconds;
/**
  The designated initializer.
  \param name The name of the WKZombie session.


  returns:
  A WKZombie instance.
*/
- (nonnull instancetype)initWithName:(NSString * _Nullable)name processPool:(WKProcessPool * _Nullable)processPool OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
/**
  Prints the current state of the WKZombie browser to the console.
*/
- (void)dump;
/**
  Clears the cache/cookie data (such as login data, etc).
*/
- (void)clearCache;
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end


@interface WKZombie (SWIFT_EXTENSION(WKZombie))
@end

#pragma clang diagnostic pop
